// <auto-generated />
using System;
using CrystalCards.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CrystalCards.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20191011130650_AddedUserEntity")]
    partial class AddedUserEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CrystalCards.Models.ActionPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CardId");

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.ToTable("ActionPoint");
                });

            modelBuilder.Entity("CrystalCards.Models.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<int>("Order");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("CrystalCards.Models.NPPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CardId");

                    b.Property<string>("Description");

                    b.Property<int>("Direction");

                    b.Property<int>("Order");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.ToTable("NPPoint");
                });

            modelBuilder.Entity("CrystalCards.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CrystalCards.Models.ActionPoint", b =>
                {
                    b.HasOne("CrystalCards.Models.Card")
                        .WithMany("ActionPoints")
                        .HasForeignKey("CardId");
                });

            modelBuilder.Entity("CrystalCards.Models.NPPoint", b =>
                {
                    b.HasOne("CrystalCards.Models.Card")
                        .WithMany("Points")
                        .HasForeignKey("CardId");
                });
#pragma warning restore 612, 618
        }
    }
}
